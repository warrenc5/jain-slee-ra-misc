<?xml version="1.0"?>
<config-property>
  <description/>
  <config-property-name>mail.store.protocol</config-property-name>
  <config-property-type>java.lang.String</config-property-type>
  <config-property-value/>
</config-property><config-property>
  <description/>
  <config-property-name>mail.transport.protocol</config-property-name>
  <config-property-type>java.lang.String</config-property-type>
  <config-property-value/>
</config-property><config-property>
  <description/>
  <config-property-name>mail.host</config-property-name>
  <config-property-type>java.lang.String</config-property-type>
  <config-property-value/>
</config-property><config-property>
  <description/>
  <config-property-name>mail.user</config-property-name>
  <config-property-type>java.lang.String</config-property-type>
  <config-property-value/>
</config-property><config-property>
  <description/>
  <config-property-name>mail.from</config-property-name>
  <config-property-type>java.lang.String</config-property-type>
  <config-property-value/>
</config-property><config-property>
  <description>Default user name for SMTP.</description>
  <config-property-name>mail.smtp.user</config-property-name>
  <config-property-type>java.lang.String</config-property-type>
  <config-property-value/>
</config-property><config-property>
  <description>The SMTP server to connect to.</description>
  <config-property-name>mail.smtp.host</config-property-name>
  <config-property-type>java.lang.String</config-property-type>
  <config-property-value/>
</config-property><config-property>
  <description>The SMTP server port to connect to, if the connect() method doesn't
explicitly specify one. Defaults to 25.</description>
  <config-property-name>mail.smtp.port</config-property-name>
  <config-property-type>java.lang.Integer</config-property-type>
  <config-property-value/>
</config-property><config-property>
  <description>Socket connection timeout value in milliseconds.
Default is infinite timeout.</description>
  <config-property-name>mail.smtp.connectiontimeout</config-property-name>
  <config-property-type>java.lang.Integer</config-property-type>
  <config-property-value/>
</config-property><config-property>
  <description>Socket I/O timeout value in milliseconds.  Default is infinite timeout.</description>
  <config-property-name>mail.smtp.timeout</config-property-name>
  <config-property-type>java.lang.Integer</config-property-type>
  <config-property-value/>
</config-property><config-property>
  <description>
Email address to use for SMTP MAIL command.  This sets the envelope
return address.  Defaults to msg.getFrom() or
InternetAddress.getLocalAddress().  NOTE: mail.smtp.user was previously
used for this.
</description>
  <config-property-name>mail.smtp.from</config-property-name>
  <config-property-type>java.lang.String</config-property-type>
  <config-property-value/>
</config-property><config-property>
  <description>
Local host name used in the SMTP HELO or EHLO command.
Defaults to InetAddress.getLocalHost().getHostName().
Should not normally need to
be set if your JDK and your name service are configured properly.
</description>
  <config-property-name>mail.smtp.localhost</config-property-name>
  <config-property-type>java.lang.String</config-property-type>
  <config-property-value/>
</config-property><config-property>
  <description>
Local address (host name) to bind to when creating the SMTP socket.
Defaults to the address picked by the Socket class.
Should not normally need to be set, but useful with multi-homed hosts
where it's important to pick a particular local address to bind to.
</description>
  <config-property-name>mail.smtp.localaddress</config-property-name>
  <config-property-type>java.lang.String</config-property-type>
  <config-property-value/>
</config-property><config-property>
  <description>
Local port number to bind to when creating the SMTP socket.
Defaults to the port number picked by the Socket class.
</description>
  <config-property-name>mail.smtp.localport</config-property-name>
  <config-property-type>java.lang.Integer</config-property-type>
  <config-property-value/>
</config-property><config-property>
  <description>
If false, do not attempt to sign on with the EHLO command.  Defaults to
true.  Normally failure of the EHLO command will fallback to the HELO
command; this property exists only for servers that don't fail EHLO
properly or don't implement EHLO properly.
</description>
  <config-property-name>mail.smtp.ehlo</config-property-name>
  <config-property-type>java.lang.Boolean</config-property-type>
  <config-property-value/>
</config-property><config-property>
  <description>If true, attempt to authenticate the user using the AUTH command.
Defaults to false.</description>
  <config-property-name>mail.smtp.auth</config-property-name>
  <config-property-type>java.lang.Boolean</config-property-type>
  <config-property-value/>
</config-property><config-property>
  <description>The submitter to use in the AUTH tag in the MAIL FROM command.
Typically used by a mail relay to pass along information about the
original submitter of the message.
See also the setSubmitter
method of SMTPMessage.
Mail clients typically do not use this.
</description>
  <config-property-name>mail.smtp.submitter</config-property-name>
  <config-property-type>java.lang.String</config-property-type>
  <config-property-value/>
</config-property><config-property>
  <description>The NOTIFY option to the RCPT command.  Either NEVER, or some
combination of SUCCESS, FAILURE, and DELAY (separated by commas).</description>
  <config-property-name>mail.smtp.dsn.notify</config-property-name>
  <config-property-type>java.lang.String</config-property-type>
  <config-property-value/>
</config-property><config-property>
  <description>The RET option to the MAIL command.  Either FULL or HDRS.</description>
  <config-property-name>mail.smtp.dsn.ret</config-property-name>
  <config-property-type>java.lang.String</config-property-type>
  <config-property-value/>
</config-property><config-property>
  <description>
If set to true, and the server supports the 8BITMIME extension, text
parts of messages that use the "quoted-printable" or "base64" encodings
are converted to use "8bit" encoding if they follow the RFC2045 rules
for 8bit text.
</description>
  <config-property-name>mail.smtp.allow8bitmime</config-property-name>
  <config-property-type>java.lang.Boolean</config-property-type>
  <config-property-value/>
</config-property><config-property>
  <description>
If set to true, and a message has some valid and some invalid
addresses, send the message anyway, reporting the partial failure with
a SendFailedException.  If set to false (the default), the message is
not sent to any of the recipients if there is an invalid recipient
address.
</description>
  <config-property-name>mail.smtp.sendpartial</config-property-name>
  <config-property-type>java.lang.Boolean</config-property-type>
  <config-property-value/>
</config-property><config-property>
  <description>The realm to use with DIGEST-MD5 authentication.</description>
  <config-property-name>mail.smtp.sasl.realm</config-property-name>
  <config-property-type>java.lang.String</config-property-type>
  <config-property-value/>
</config-property><config-property>
  <description>
If set to true, causes the transport to wait for the response to the
QUIT command.  If set to false (the default), the QUIT command is sent
and the connection is immediately closed.  (NOTE: The default may change
in the next release.)
</description>
  <config-property-name>mail.smtp.quitwait</config-property-name>
  <config-property-type>java.lang.Boolean</config-property-type>
  <config-property-value/>
</config-property><config-property>
  <description>
If set to true, causes the transport to include an
SMTPAddressSucceededException
for each address that is successful.
Note also that this will cause a
SendFailedException
to be thrown from the
sendMessage
method of
SMTPTransport
even if all addresses were correct and the message was sent
successfully.
</description>
  <config-property-name>mail.smtp.reportsuccess</config-property-name>
  <config-property-type>java.lang.Boolean</config-property-type>
  <config-property-value/>
</config-property><config-property>
  <description>
If set, specifies the name of a class that implements the
javax.net.SocketFactory interface.  This class
will be used to create SMTP sockets.
</description>
  <config-property-name>mail.smtp.socketFactory.class</config-property-name>
  <config-property-type>java.lang.String</config-property-type>
  <config-property-value/>
</config-property><config-property>
  <description>
If set to true, failure to create a socket using the specified
socket factory class will cause the socket to be created using
the java.net.Socket class.
Defaults to true.
</description>
  <config-property-name>mail.smtp.socketFactory.fallback</config-property-name>
  <config-property-type>java.lang.Boolean</config-property-type>
  <config-property-value/>
</config-property><config-property>
  <description>
Specifies the port to connect to when using the specified socket
factory.
If not set, the default port will be used.
</description>
  <config-property-name>mail.smtp.socketFactory.port</config-property-name>
  <config-property-type>java.lang.Integer</config-property-type>
  <config-property-value/>
</config-property><config-property>
  <description>
Extension java.lang.String to append to the MAIL command.
The extension java.lang.String can be used to specify standard SMTP
service extensions as well as vendor-specific extensions.
Typically the application should use the
SMTPTransport
method supportsExtension
to verify that the server supports the desired service extension.
See RFC 1869
and other RFCs that define specific extensions.
</description>
  <config-property-name>mail.smtp.mailextension</config-property-name>
  <config-property-type>java.lang.String</config-property-type>
  <config-property-value/>
</config-property><config-property>
  <description>Default user name for POP3.</description>
  <config-property-name>mail.pop3.user</config-property-name>
  <config-property-type>java.lang.String</config-property-type>
  <config-property-value/>
</config-property><config-property>
  <description>The POP3 server to connect to.</description>
  <config-property-name>mail.pop3.host</config-property-name>
  <config-property-type>java.lang.String</config-property-type>
  <config-property-value/>
</config-property><config-property>
  <description>The POP3 server port to connect to, if the connect() method doesn't
explicitly specify one. Defaults to 110.</description>
  <config-property-name>mail.pop3.port</config-property-name>
  <config-property-type>java.lang.Integer</config-property-type>
  <config-property-value/>
</config-property><config-property>
  <description>Socket connection timeout value in milliseconds.
Default is infinite timeout.</description>
  <config-property-name>mail.pop3.connectiontimeout</config-property-name>
  <config-property-type>java.lang.Integer</config-property-type>
  <config-property-value/>
</config-property><config-property>
  <description>Socket I/O timeout value in milliseconds.  Default is infinite timeout.</description>
  <config-property-name>mail.pop3.timeout</config-property-name>
  <config-property-type>java.lang.Integer</config-property-type>
  <config-property-value/>
</config-property><config-property>
  <description>
Send a POP3 RSET command when closing the folder, before sending the
QUIT command.  Useful with POP3 servers that implicitly mark all
messages that are read as "deleted"; this will prevent such messages
from being deleted and expunged unless the client requests so.  Default
is false.
</description>
  <config-property-name>mail.pop3.rsetbeforequit</config-property-name>
  <config-property-type>java.lang.Boolean</config-property-type>
  <config-property-value/>
</config-property><config-property>
  <description>
Class name of a subclass of com.sun.mail.pop3.POP3Message.
The subclass can be used to handle (for example) non-standard
Content-Type headers.  The subclass must have a public constructor
of the form MyPOP3Message(Folder f, int msgno)
throws MessagingException.
</description>
  <config-property-name>mail.pop3.message.class</config-property-name>
  <config-property-type>java.lang.String</config-property-type>
  <config-property-value/>
</config-property><config-property>
  <description>
Local address (host name) to bind to when creating the POP3 socket.
Defaults to the address picked by the Socket class.
Should not normally need to be set, but useful with multi-homed hosts
where it's important to pick a particular local address to bind to.
</description>
  <config-property-name>mail.pop3.localaddress</config-property-name>
  <config-property-type>java.lang.String</config-property-type>
  <config-property-value/>
</config-property><config-property>
  <description>
Local port number to bind to when creating the POP3 socket.
Defaults to the port number picked by the Socket class.
</description>
  <config-property-name>mail.pop3.localport</config-property-name>
  <config-property-type>java.lang.Integer</config-property-type>
  <config-property-value/>
</config-property><config-property>
  <description>
If set to true, use APOP instead of USER/PASS to login to the
POP3 server, if the POP3 server supports APOP.  APOP sends a
digest of the password rather than the clear text password.
Defaults to false.
</description>
  <config-property-name>mail.pop3.apop.enable</config-property-name>
  <config-property-type>java.lang.Boolean</config-property-type>
  <config-property-value/>
</config-property><config-property>
  <description>
If set, specifies the name of a class that implements the
javax.net.SocketFactory interface.  This class
will be used to create POP3 sockets.
</description>
  <config-property-name>mail.pop3.socketFactory.class</config-property-name>
  <config-property-type>java.lang.String</config-property-type>
  <config-property-value/>
</config-property><config-property>
  <description>
If set to true, failure to create a socket using the specified
socket factory class will cause the socket to be created using
the java.net.Socket class.
Defaults to true.
</description>
  <config-property-name>mail.pop3.socketFactory.fallback</config-property-name>
  <config-property-type>java.lang.Boolean</config-property-type>
  <config-property-value/>
</config-property><config-property>
  <description>
Specifies the port to connect to when using the specified socket
factory.
If not set, the default port will be used.
</description>
  <config-property-name>mail.pop3.socketFactory.port</config-property-name>
  <config-property-type>java.lang.Integer</config-property-type>
  <config-property-value/>
</config-property><config-property>
  <description>Default user name for IMAP.</description>
  <config-property-name>mail.imap.user</config-property-name>
  <config-property-type>java.lang.String</config-property-type>
  <config-property-value/>
</config-property><config-property>
  <description>The IMAP server to connect to.</description>
  <config-property-name>mail.imap.host</config-property-name>
  <config-property-type>java.lang.String</config-property-type>
  <config-property-value/>
</config-property><config-property>
  <description>The IMAP server port to connect to, if the connect() method doesn't
explicitly specify one. Defaults to 143.</description>
  <config-property-name>mail.imap.port</config-property-name>
  <config-property-type>java.lang.Integer</config-property-type>
  <config-property-value/>
</config-property><config-property>
  <description>Controls whether the IMAP partial-fetch capability should be used.
Defaults to true.</description>
  <config-property-name>mail.imap.partialfetch</config-property-name>
  <config-property-type>java.lang.Boolean</config-property-type>
  <config-property-value/>
</config-property><config-property>
  <description>Partial fetch size in bytes. Defaults to 16K.</description>
  <config-property-name>mail.imap.fetchsize</config-property-name>
  <config-property-type>java.lang.Integer</config-property-type>
  <config-property-value/>
</config-property><config-property>
  <description>Socket connection timeout value in milliseconds.
Default is infinite timeout.</description>
  <config-property-name>mail.imap.connectiontimeout</config-property-name>
  <config-property-type>java.lang.Integer</config-property-type>
  <config-property-value/>
</config-property><config-property>
  <description>Socket I/O timeout value in milliseconds.  Default is infinite timeout.</description>
  <config-property-name>mail.imap.timeout</config-property-name>
  <config-property-type>java.lang.Integer</config-property-type>
  <config-property-value/>
</config-property><config-property>
  <description>Timeout value in milliseconds for cache of STATUS command response.
Default is 1000 (1 second).  Zero disables cache.</description>
  <config-property-name>mail.imap.statuscachetimeout</config-property-name>
  <config-property-type>java.lang.Integer</config-property-type>
  <config-property-value/>
</config-property><config-property>
  <description>
Maximum size of a message to buffer in memory when appending to an IMAP
folder.  If not set, or set to -1, there is no maximum and all messages
are buffered.  If set to 0, no messages are buffered.  If set to (e.g.)
8192, messages of 8K bytes or less are buffered, larger messages are
not buffered.  Buffering saves cpu time at the expense of short term
memory usage.  If you commonly append very large messages to IMAP
mailboxes you might want to set this to a moderate value (1M or less).
</description>
  <config-property-name>mail.imap.appendbuffersize</config-property-name>
  <config-property-type>java.lang.Integer</config-property-type>
  <config-property-value/>
</config-property><config-property>
  <description>Maximum number of available connections in the connection pool.
Default is 1.</description>
  <config-property-name>mail.imap.connectionpoolsize</config-property-name>
  <config-property-type>java.lang.Integer</config-property-type>
  <config-property-value/>
</config-property><config-property>
  <description>Timeout value in milliseconds for connection pool connections.  Default
is 45000 (45 seconds).</description>
  <config-property-name>mail.imap.connectionpooltimeout</config-property-name>
  <config-property-type>java.lang.Integer</config-property-type>
  <config-property-value/>
</config-property><config-property>
  <description>Flag to indicate whether to use a dedicated store connection for store
commands.  Default is false.</description>
  <config-property-name>mail.imap.separatestoreconnection</config-property-name>
  <config-property-type>java.lang.Boolean</config-property-type>
  <config-property-value/>
</config-property><config-property>
  <description>If false, attempts to open a folder read/write will fail
if the SELECT command succeeds but indicates that the folder is READ-ONLY.
This sometimes indicates that the folder contents can'tbe changed, but
the flags are per-user and can be changed, such as might be the case for
public shared folders.  If true, such open attempts will succeed, allowing
the flags to be changed.  The getMode method on the
Folder object will return Folder.READ_ONLY
in this case even though the open method specified
Folder.READ_WRITE.  Default is false.</description>
  <config-property-name>mail.imap.allowreadonlyselect</config-property-name>
  <config-property-type>java.lang.Boolean</config-property-type>
  <config-property-value/>
</config-property><config-property>
  <description>If true, prevents use of the non-standard AUTHENTICATE LOGIN
command, instead using the plain LOGIN command.
Default is false.</description>
  <config-property-name>mail.imap.auth.login.disable</config-property-name>
  <config-property-type>java.lang.Boolean</config-property-type>
  <config-property-value/>
</config-property><config-property>
  <description>If true, prevents use of the AUTHENTICATE PLAIN command.
Default is false.</description>
  <config-property-name>mail.imap.auth.plain.disable</config-property-name>
  <config-property-type>java.lang.Boolean</config-property-type>
  <config-property-value/>
</config-property><config-property>
  <description>If true, enables the use of the STARTTLS command (if
supported by the server) to switch the connection to a TLS-protected
connection before issuing any login commands.  Note that an appropriate
trust store must configured so that the client will trust the server's
certificate.  This feature only works on J2SE 1.4 and newer systems.
Default is false.</description>
  <config-property-name>mail.imap.starttls.enable</config-property-name>
  <config-property-type>java.lang.Boolean</config-property-type>
  <config-property-value/>
</config-property><config-property>
  <description>
Local address (host name) to bind to when creating the IMAP socket.
Defaults to the address picked by the Socket class.
Should not normally need to be set, but useful with multi-homed hosts
where it's important to pick a particular local address to bind to.
</description>
  <config-property-name>mail.imap.localaddress</config-property-name>
  <config-property-type>java.lang.String</config-property-type>
  <config-property-value/>
</config-property><config-property>
  <description>
Local port number to bind to when creating the IMAP socket.
Defaults to the port number picked by the Socket class.
</description>
  <config-property-name>mail.imap.localport</config-property-name>
  <config-property-type>java.lang.Integer</config-property-type>
  <config-property-value/>
</config-property><config-property>
  <description>
If set to true, attempt to use the javax.security.sasl package to
choose an authentication mechanism for login.
Defaults to false.
</description>
  <config-property-name>mail.imap.sasl.enable</config-property-name>
  <config-property-type>java.lang.Boolean</config-property-type>
  <config-property-value/>
</config-property><config-property>
  <description>
A space or comma separated list of SASL mechanism names to try
to use.
</description>
  <config-property-name>mail.imap.sasl.mechanisms</config-property-name>
  <config-property-type>java.lang.String</config-property-type>
  <config-property-value/>
</config-property><config-property>
  <description>
The authorization ID to use in the SASL authentication.
If not set, the authetication ID (user name) is used.
</description>
  <config-property-name>mail.imap.sasl.authorizationid</config-property-name>
  <config-property-type>java.lang.String</config-property-type>
  <config-property-value/>
</config-property><config-property>
  <description>
If set, specifies the name of a class that implements the
javax.net.SocketFactory interface.  This class
will be used to create IMAP sockets.
</description>
  <config-property-name>mail.imap.socketFactory.class</config-property-name>
  <config-property-type>java.lang.String</config-property-type>
  <config-property-value/>
</config-property><config-property>
  <description>
If set to true, failure to create a socket using the specified
socket factory class will cause the socket to be created using
the java.net.Socket class.
Defaults to true.
</description>
  <config-property-name>mail.imap.socketFactory.fallback</config-property-name>
  <config-property-type>java.lang.Boolean</config-property-type>
  <config-property-value/>
</config-property><config-property>
  <description>
Specifies the port to connect to when using the specified socket
factory.
If not set, the default port will be used.
</description>
  <config-property-name>mail.imap.socketFactory.port</config-property-name>
  <config-property-type>java.lang.Integer</config-property-type>
  <config-property-value/>
</config-property>
